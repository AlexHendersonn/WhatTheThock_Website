import { JsonWebKey } from './metadata';
interface KeyStoreOptions {
    /**
     * Issuer URI.
     */
    issuer: string;
    /**
     * Maximum requests per minute for new KIDs.
     */
    requestsPerMinute: number;
    /**
     * Number of signing certs to cache.
     */
    cacheSize: number;
    /**
     * Cache duration.
     */
    cacheTTL: number;
}
export default class KeyStore {
    /**
     * Helper to cache a given key.
     */
    private getKeyCached;
    /**
     * Metadata client to load the keyset.
     */
    private metadataClient;
    constructor(options: KeyStoreOptions);
    /**
     * Get all usable keys from the JSON Web Key endpoint.
     */
    getSigningKeys(): Promise<Array<JsonWebKey>>;
    /**
     * Get a JSON Web Key from the cache.
     * @param kid
     */
    getKey(kid: string): Promise<JsonWebKey>;
}
export {};
