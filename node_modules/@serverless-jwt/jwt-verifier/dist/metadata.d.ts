export interface JsonWebKey {
    kid: string;
    nbf: string;
    key: string;
}
export default class MetadataClient {
    /**
     * The base url for the issuer (eg: https://login.acme.com/)
     */
    private baseUrl;
    /**
     * The full JWKS uri, provided directly or loaded from the metadata (eg: https://login.acme.com/.well-known/jwks.json)
     */
    private jwksUri;
    /**
     * Semaphore to control concurrency.
     */
    private metadataSemaphore;
    constructor(issuer: string, jwksUri?: string);
    /**
     * Get the OpenID configuration.
     */
    getOpenIdConfiguration(): Promise<{
        [key: string]: any;
    }>;
    /**
     * Get the JSON Web Key Set url (from config or from metadata).
     */
    getJsonWebKeySetUrl(): Promise<string>;
    /**
     * Get the JSON Web Key Set.
     */
    getJsonWebKeySet(): Promise<Array<{
        [key: string]: any;
    }>>;
}
